DOING
------

BUGS
-----

NEXT
-----
- show run history
- let the user configure:
  - projects home
  - maximum elements in run history
- add wizard step title
- rename wizard to Pages?
- create a JobParserFactory that given the jobXmlVersion returns a parser and a validator
- create a ProjectParserImpl use jobXmlVersion to get a validator
- create a ProjectParserFactory that given the jobXmlVersion returns a parser and a validator
- use XMLUtils.getAttribute to get an attribute, it resolves the default
- about with version (JobsUIUtils.getVersion)
- on new project:
 - Namespace -> Group id?
 - id -> Artifact id
 - Project name -> Description
  on edit:
  - enable save only if there are pending changes
  - add Save & Run
  - copy and paste parameter
  - move parameter
  - warning if close with changes
- tab on edit script: 4 spaces
- when I write the job.xml change parameter's fields order to:
  - key, name, component, dependsOn
- is project version needed? Probably yes for repository.
- add a way to upgrade job data (bookmarks, calls) to a new version
- now saving a job will delete old job files and script folder, but retain other files, to preserve them,
  but "save as" does not copy the other files. What to do?
- WizardStep is used in XML and job, may be better to have two classes?
- rename WizardStep to Group?
- WizardStep has no custom validation nor automatic (through dependencies)
- is it better to define Wizard step only with a name and reference it in parameters?
- customizable UIComponentType
- JobDependency and JobDependencyXML are correct names?
- Edit: warning on closing project with changes
- why getScriptsLocations() and not getScriptLocation? Do I need more than one location different from "scripts"?
- when I create a new project and add it to the last opened project registry, I must, eventually, update the main window
- validate expressions and calls on edit
- command line arguments could be new, run or edit, then the others are options: -project -job -ui, so:
  - to create a new job: `jobsui new` (is it needed?, It can be easily done in the main application)
  - to run a job: `jobsui run -project <pathtoproject> -job <jobid>`
  - to edit a project: `jobsui edit -project <pathtoproject>`
  - to open the main application: `jobsui`
- project's version must be mandatory on save
- when I import an external project is name needed?
- rename key to id
- CallXML has no matching class JobCall
- ExpressionXML and CallXML as ParameterXML
  is it needed?
   returns both
- EditProject: the call to JobXML.getParameter is needed? Can I call a specific method for parameter, expression and call?
- JobsUIPreferencesImpl why save every time all?